import requests
import time
from threading import Thread

class SilentMoexPriceAlert:
    def __init__(self):
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ç–æ–ø-—É—Ä–æ–≤–Ω–µ–π {—Ç–∏–∫–µ—Ä: [—Å–ø–∏—Å–æ–∫ –∞–ª–µ—Ä—Ç–æ–≤]}
        self.alerts = {}
        # –§–ª–∞–≥ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Ä–∞–±–æ—Ç—ã —Ü–∏–∫–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        self.running = False

    def add_alert(self, ticker, price, direction):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∞–ª–µ—Ä—Ç –≤ —Å–∏—Å—Ç–µ–º—É"""
        if ticker not in self.alerts:
            self.alerts[ticker] = []
        self.alerts[ticker].append({
            'price': float(price),       # –¶–µ–ª–µ–≤–∞—è —Ü–µ–Ω–∞
            'direction': direction.lower(),  # 'long' –∏–ª–∏ 'short'
            'triggered': False          # –§–ª–∞–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
        })

    def check_price(self, ticker):
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –∞–∫—Ü–∏–∏ —Å MOEX ISS API"""
        url = "https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities.json"
        params = {
            "iss.meta": "off",          # –£–±–∏—Ä–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞
            "securities": ticker,       # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–π —Ç–∏–∫–µ—Ä
            "marketdata.columns": "SECID,LAST"  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–∏–∫–µ—Ä –∏ —Ü–µ–Ω—É
        }

        try:
            response = requests.get(url, params=params, timeout=10)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ HTTP
            data = response.json()
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª—è marketdata -> data
            marketdata = data["marketdata"]["data"]
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ü–µ–Ω—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
            return float(marketdata[0][1]) if marketdata and marketdata[0][1] else None
        except Exception:
            return None  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None

    def monitor(self, interval=10):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω"""
        self.running = True
        print("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –∑–∞–ø—É—â–µ–Ω –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ")

        while self.running:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã
                for ticker in list(self.alerts.keys()):
                    price = self.check_price(ticker)
                    if price is None:  # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ —Ü–µ–Ω—É
                        continue      # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ä

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∞–ª–µ—Ä—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–∫–µ—Ä–∞
                    for alert in self.alerts[ticker]:
                        if alert['triggered']:  # –ï—Å–ª–∏ –∞–ª–µ—Ä—Ç —É–∂–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª
                            continue           # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–≥–æ

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
                        condition_met = (
                            (alert['direction'] == 'long' and price >= alert['price']) or
                            (alert['direction'] == 'short' and price <= alert['price'])
                        )

                        if condition_met:
                            alert['triggered'] = True  # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Å—Ä–∞–±–æ—Ç–∞–≤—à–∏–π
                            direction = "–≤—ã—à–µ" if alert['direction'] == 'long' else "–Ω–∏–∂–µ"
                            message = (
                                f"üîî –ê–õ–ï–†–¢! {ticker} –¥–æ—Å—Ç–∏–≥ {alert['price']} —Ä—É–±. "
                                f"(—Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ {price} —Ä—É–±., –¥–≤–∏–∂–µ–Ω–∏–µ {direction} —É—Ä–æ–≤–Ω—è)"
                            )
                            print(message)  # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏

                time.sleep(interval)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
            except Exception:
                time.sleep(60)  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –¥–µ–ª–∞–µ–º –±–æ–ª—å—à—É—é –ø–∞—É–∑—É

    def start_monitoring(self, interval=10):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        Thread(target=self.monitor, args=(interval,), daemon=True).start()

    def stop_monitoring(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
        self.running = False


def setup_alerts(alert_system):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–ª–µ—Ä—Ç–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å"""
    print("\n–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ø-—É—Ä–æ–≤–Ω–µ–π (—Ñ–æ—Ä–º–∞—Ç: —Ç–∏–∫–µ—Ä —Ü–µ–Ω–∞ long/short)")
    print("–ü—Ä–∏–º–µ—Ä: GAZP 160 short - –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –Ω–∏–∂–µ 160")
    print("–ü—Ä–∏–º–µ—Ä: SBER 300 long - –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ —Ä–æ—Å—Ç–µ –≤—ã—à–µ 300")
    print("–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ 'q'\n")

    while True:
        try:
            user_input = input("> ").strip()
            if user_input.lower() == 'q':
                break

            parts = user_input.split()
            if len(parts) != 3:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –¢–ò–ö–ï–† –¶–ï–ù–ê long/short")
                continue

            ticker, price, direction = parts
            if direction.lower() not in ('long', 'short'):
                print("–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'long' –∏–ª–∏ 'short'")
                continue

            alert_system.add_alert(ticker, price, direction)
            print(f"–î–æ–±–∞–≤–ª–µ–Ω –∞–ª–µ—Ä—Ç: {ticker} {direction} {price}")

        except ValueError:
            print("–û—à–∏–±–∫–∞: —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        except Exception:
            print("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    alert_system = SilentMoexPriceAlert()

    print("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω MOEX")
    setup_alerts(alert_system)  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤

    if alert_system.alerts:
        alert_system.start_monitoring()  # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        print("\n–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω. –†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.")
        print("–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n")

        try:
            while True:
                time.sleep(1)  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π
        except KeyboardInterrupt:
            alert_system.stop_monitoring()
            print("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("–ù–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞")


if __name__ == "__main__":
    main()