import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import current_price
from price_level import SilentMoexPriceAlert

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–ª–µ—Ä—Ç–æ–≤
alert_system = SilentMoexPriceAlert()
alert_system.start_monitoring()

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
API_TOKEN = ''

bot = Bot(token=API_TOKEN)
dp = Dispatcher()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
def get_main_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="/price"), KeyboardButton(text="/add_alert")],
            [KeyboardButton(text="/my_alerts"), KeyboardButton(text="/help")]
        ],
        resize_keyboard=True
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    welcome_text = """
üìà –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ—Ç–∏—Ä–æ–≤–æ–∫ —Å –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ë–∏—Ä–∂–∏.

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/price - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏
/add_alert - –î–æ–±–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Ä–æ–≤–Ω–µ (–í—ã–≤–æ–¥–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è —Ü–µ–Ω—ã)
/my_alerts - –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞—è–≤–∫–∏
/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
    """
    await message.answer(welcome_text, reply_markup=get_main_keyboard())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message(Command("help"))
async def send_help(message: types.Message):
    help_text = """
üìå –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:

1. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–æ–∫:
   /price - –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—ã –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
   (–≤–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã)

2. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–ª–µ—Ä—Ç–∞–º–∏:
   /add_alert - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∞–ª–µ—Ä—Ç
   –§–æ—Ä–º–∞—Ç: /add_alert TICKER PRICE DIRECTION
   –ü—Ä–∏–º–µ—Ä: /add_alert SBER 300 long
   (direction: long - –ø—Ä–∏ —Ä–æ—Å—Ç–µ –≤—ã—à–µ, short - –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –Ω–∏–∂–µ)

   /my_alerts - –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã
    """
    await message.answer(help_text)


# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message()
async def handle_text_message(message: types.Message):
    args = message.text.strip().split()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–ª–µ—Ä—Ç–∞ –ø–æ —à–∞–±–ª–æ–Ω—É: TICKER PRICE DIRECTION
    if len(args) == 3:
        ticker, price_str, direction = args
        ticker = ticker.upper()
        direction = direction.lower()

        try:
            price = float(price_str)
        except ValueError:
            await message.answer("‚ùó –¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü—Ä–∏–º–µ—Ä: SBER 300 long")
            return

        if direction not in ('long', 'short'):
            await message.answer("‚ùó –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'long' –∏–ª–∏ 'short'")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–µ—Ä—Ç
        alert_system.add_alert(ticker, price, direction)
        direction_text = "–≤—ã—à–µ" if direction == 'long' else "–Ω–∏–∂–µ"
        await message.answer(
            f"‚úÖ –ê–ª–µ—Ä—Ç –¥–æ–±–∞–≤–ª–µ–Ω!\n"
            f"–¢–∏–∫–µ—Ä: {ticker}\n"
            f"–¶–µ–Ω–∞: {price} —Ä—É–±.\n"
            f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ {direction_text} —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ü–µ–Ω—ã"
        )
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ–∫—É—â–∏—Ö —Ü–µ–Ω: —Å–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ä–æ–≤
    if all(arg.isalpha() for arg in args):
        tickers = [arg.upper() for arg in args]
        quotes = current_price.get_current_price(tickers)

        if quotes:
            response = "üìä –¢–µ–∫—É—â–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏:\n"
            for ticker, price in quotes.items():
                response += f"{ticker}: {price} —Ä—É–±.\n"
            await message.answer(response)
        else:
            await message.answer("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ç–∏—Ä–æ–≤–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∏–∫–µ—Ä—ã.")
        return

    # –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ –Ω–∏ –∫–∞–∫ –∞–ª–µ—Ä—Ç, –Ω–∏ –∫–∞–∫ —Ç–∏–∫–µ—Ä—ã:
    await message.answer("‚ùì –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
                         "–ü—Ä–∏–º–µ—Ä –¥–ª—è —Ü–µ–Ω: `SBER GAZP`\n"
                         "–ü—Ä–∏–º–µ—Ä –¥–ª—è –∞–ª–µ—Ä—Ç–∞: `SBER 300 long`")



# –ü–æ–∫–∞–∑ –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(Command("my_alerts"))
async def show_alerts(message: types.Message):
    if not alert_system.alerts:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤.")
        return

    response = "üìå –í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã:\n\n"
    for ticker, alerts in alert_system.alerts.items():
        for alert in alerts:
            if not alert['triggered']:
                direction = "‚Üë –≤—ã—à–µ" if alert['direction'] == 'long' else "‚Üì –Ω–∏–∂–µ"
                response += f"{ticker}: {alert['price']} —Ä—É–±. ({direction})\n"

    await message.answer(response if len(response) > 20 else "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ –∞–ª–µ—Ä—Ç–æ–≤
async def send_alert_notifications():
    while True:
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ä–∞–±–æ—Ç–∞–≤—à–∏—Ö –∞–ª–µ—Ä—Ç–æ–≤
        # –í –≤–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ —É–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ –∫–ª–∞—Å—Å–µ SilentMoexPriceAlert
        # –∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ print(), –ø–æ—ç—Ç–æ–º—É –Ω–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å —ç—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –∫–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–æ—Ç–æ–º

        # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º, —Ç–∞–∫ –∫–∞–∫ –∫–ª–∞—Å—Å SilentMoexPriceAlert
        # —É–∂–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–ª–µ—Ä—Ç—ã –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å
        await asyncio.sleep(10)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    asyncio.create_task(send_alert_notifications())

    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
